{"version":3,"sources":["assets/red-circle.png","helpers/helper.js","components/GlobalCase.js","components/BarChart.js","components/GlobalResult.js","components/CountryCard.js","components/Map.js","App.js","index.js"],"names":["module","exports","styles","elementType","stylers","color","featureType","saturation","weight","visibility","numberWithCommas","x","String","replace","Wrapper","styled","div","Header","Title","span","Total","props","weigth","size","line","align","CaseWrapper","Cases","Case","Country","GlobalCase","countries","global","changeCenter","map","country","i","onClick","key","cases","BarChart","useState","dailyCases","setDailyCases","dates","setDates","useEffect","axios","get","then","res","Object","values","data","calc","days","keys","shift","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","height","width","maintainAspectRatio","responsive","options","scales","xAxes","type","time","displayFormats","month","distribution","GlobalWrapper","HeaderWrapper","GlobalTotal","scroll","CaseContainer","GlobalResult","total","style","marginRight","deaths","recovered","Fragment","fontWeight","fontSize","Date","updated","toLocaleString","Name","CaseTitle","CountryCard","marginTop","MyMapComponent","compose","withProps","googleMapURL","process","loadingElement","containerElement","position","paddingTop","mapElement","withScriptjs","withGoogleMap","modalOpen","setModalOpen","setCountry","lat","lng","coordinates","setCoordinates","zoom","setZoom","click","countryInfo","long","defaultZoom","defaultCenter","center","zoomControl","disableDefaultUI","draggableCursor","draggingCursor","datas","coord","showModal","_id","icon","url","redCircle","scaledSize","confirmed","window","google","maps","Size","opacity","closeModal","CoronaMap","Container","App","setData","setTotal","setClick","lastUpdated","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e233ca80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/red-circle.be3acb5e.png\";","export const styles = [\r\n  {\r\n    elementType: 'geometry',\r\n    stylers: [\r\n      {\r\n        color: '#1d2c4d',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    elementType: 'labels.text.fill',\r\n    stylers: [\r\n      {\r\n        color: '#8ec3b9',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    elementType: 'labels.text.stroke',\r\n    stylers: [\r\n      {\r\n        color: '#1a3646',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'administrative.country',\r\n    elementType: 'geometry.stroke',\r\n    stylers: [\r\n      {\r\n        color: '#4b6878',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'administrative.country',\r\n    elementType: 'labels.text',\r\n    stylers: [\r\n      {\r\n        saturation: 100,\r\n      },\r\n      {\r\n        weight: 3,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'administrative.country',\r\n    elementType: 'labels.text.fill',\r\n    stylers: [\r\n      {\r\n        color: '#d9d9d9',\r\n      },\r\n      {\r\n        weight: 8,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'administrative.land_parcel',\r\n    stylers: [\r\n      {\r\n        visibility: 'off',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'administrative.land_parcel',\r\n    elementType: 'labels.text.fill',\r\n    stylers: [\r\n      {\r\n        color: '#64779e',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'administrative.neighborhood',\r\n    stylers: [\r\n      {\r\n        visibility: 'off',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'administrative.province',\r\n    elementType: 'geometry.stroke',\r\n    stylers: [\r\n      {\r\n        color: '#4b6878',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'landscape.man_made',\r\n    stylers: [\r\n      {\r\n        visibility: 'off',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'landscape.man_made',\r\n    elementType: 'geometry.stroke',\r\n    stylers: [\r\n      {\r\n        color: '#334e87',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'landscape.natural',\r\n    elementType: 'geometry',\r\n    stylers: [\r\n      {\r\n        color: '#023e58',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'poi',\r\n    elementType: 'geometry',\r\n    stylers: [\r\n      {\r\n        color: '#283d6a',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'poi',\r\n    elementType: 'labels.text',\r\n    stylers: [\r\n      {\r\n        visibility: 'off',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'poi',\r\n    elementType: 'labels.text.fill',\r\n    stylers: [\r\n      {\r\n        color: '#6f9ba5',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'poi',\r\n    elementType: 'labels.text.stroke',\r\n    stylers: [\r\n      {\r\n        color: '#1d2c4d',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'poi.business',\r\n    stylers: [\r\n      {\r\n        visibility: 'off',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'poi.park',\r\n    elementType: 'geometry.fill',\r\n    stylers: [\r\n      {\r\n        color: '#023e58',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'poi.park',\r\n    elementType: 'labels.text.fill',\r\n    stylers: [\r\n      {\r\n        color: '#3C7680',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'road',\r\n    stylers: [\r\n      {\r\n        visibility: 'off',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'road',\r\n    elementType: 'geometry',\r\n    stylers: [\r\n      {\r\n        color: '#304a7d',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'road',\r\n    elementType: 'labels',\r\n    stylers: [\r\n      {\r\n        visibility: 'off',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'road',\r\n    elementType: 'labels.icon',\r\n    stylers: [\r\n      {\r\n        visibility: 'off',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'road',\r\n    elementType: 'labels.text.fill',\r\n    stylers: [\r\n      {\r\n        color: '#98a5be',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'road',\r\n    elementType: 'labels.text.stroke',\r\n    stylers: [\r\n      {\r\n        color: '#1d2c4d',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'road.highway',\r\n    elementType: 'geometry',\r\n    stylers: [\r\n      {\r\n        color: '#2c6675',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'road.highway',\r\n    elementType: 'geometry.stroke',\r\n    stylers: [\r\n      {\r\n        color: '#255763',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'road.highway',\r\n    elementType: 'labels.text.fill',\r\n    stylers: [\r\n      {\r\n        color: '#b0d5ce',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'road.highway',\r\n    elementType: 'labels.text.stroke',\r\n    stylers: [\r\n      {\r\n        color: '#023e58',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'transit',\r\n    stylers: [\r\n      {\r\n        visibility: 'off',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'transit',\r\n    elementType: 'labels.text.fill',\r\n    stylers: [\r\n      {\r\n        color: '#98a5be',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'transit',\r\n    elementType: 'labels.text.stroke',\r\n    stylers: [\r\n      {\r\n        color: '#1d2c4d',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'transit.line',\r\n    elementType: 'geometry.fill',\r\n    stylers: [\r\n      {\r\n        color: '#283d6a',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'transit.station',\r\n    elementType: 'geometry',\r\n    stylers: [\r\n      {\r\n        color: '#3a4762',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'water',\r\n    elementType: 'geometry',\r\n    stylers: [\r\n      {\r\n        color: '#0e1626',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'water',\r\n    elementType: 'labels.text',\r\n    stylers: [\r\n      {\r\n        visibility: 'off',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'water',\r\n    elementType: 'labels.text.fill',\r\n    stylers: [\r\n      {\r\n        color: '#4e6d70',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport function numberWithCommas(x) {\r\n  return String(x).replace(/(.)(?=(\\d{3})+$)/g, '$1.');\r\n}\r\n\r\nexport function markerSize(total, confirmed) {\r\n  if (confirmed <= 1000) {\r\n    return new window.google.maps.Size(10, 9);\r\n  }\r\n\r\n  if (confirmed > 1000 && confirmed <= 10000) {\r\n    return new window.google.maps.Size(14, 12);\r\n  }\r\n\r\n  if (confirmed > 10000 && confirmed <= 40000) {\r\n    return new window.google.maps.Size(19, 15);\r\n  }\r\n\r\n  if (confirmed > 40000 && confirmed <= 100000) {\r\n    return new window.google.maps.Size(23, 20);\r\n  }\r\n\r\n  if (confirmed > 100000 && confirmed <= 500000) {\r\n    return new window.google.maps.Size(27, 23);\r\n  }\r\n\r\n  if (confirmed > 500000 && confirmed <= 2000000) {\r\n    return new window.google.maps.Size(33, 27);\r\n  }\r\n\r\n  if (confirmed > 2000000 && confirmed <= 5000000) {\r\n    return new window.google.maps.Size(55, 45);\r\n  }\r\n\r\n  if (confirmed > 5000000) {\r\n    return new window.google.maps.Size(75, 66);\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { numberWithCommas } from '../helpers/helper';\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 0.5em;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  width: 100%;\r\n  background-color: #023e58;\r\n  padding: 1em;\r\n  text-align: center;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n  color: #f1faee;\r\n  font-weight: 500;\r\n  margin-bottom: 1em;\r\n \r\n`;\r\n\r\nconst Total = styled.span`\r\n  color: #f1faee;\r\n  font-weight: ${props => props.weigth || '700'};\r\n  font-size: ${props => props.size || '2rem'};\r\n  line-height: ${props => props.line || '3rem'};\r\n  text-align: ${props => props.align};\r\n`;\r\n\r\nconst CaseWrapper = styled.div`\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  background-color: #023e58;\r\n  height: calc(100% - 100px);\r\n  padding: 1em;\r\n  margin: 0.5em 0;\r\n  overflow-y: scroll;\r\n  &::-webkit-scrollbar {\r\n    width: 10px;\r\n    background-color: #f5f5f5;\r\n  }\r\n  &::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    background-color: #f5f5f5;\r\n  }\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n    background-color: #f5f5f5;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: #14213d;\r\n  }\r\n`;\r\n\r\nconst Cases = styled.div``;\r\n\r\nconst Case = styled.div`\r\n  border-bottom: 1px solid #5c5c5c;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.3em;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Country = styled.div`\r\n  color: #588b8b;\r\n  &:hover {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst GlobalCase = ({ countries, global, changeCenter }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Header>\r\n        <Title>Global Cases</Title>\r\n        <Total align='center'>{numberWithCommas(global)}</Total>\r\n      </Header>\r\n      <CaseWrapper>\r\n        <Title>Cases by Country</Title>\r\n        <Cases>\r\n          {countries.map((country, i) => (\r\n            <Case\r\n              onClick={() => changeCenter(country)}\r\n              key={`${country.country}+${i}`}\r\n            >\r\n              <Country>{country.country}</Country>\r\n              <Total size='1.10rem' weigth='500' line='1rem'>\r\n                {numberWithCommas(country.cases)}\r\n              </Total>\r\n            </Case>\r\n          ))}\r\n        </Cases>\r\n      </CaseWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default GlobalCase;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst BarChart = props => {\r\n  const [dailyCases, setDailyCases] = useState([]);\r\n  const [dates, setDates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('https://disease.sh/v3/covid-19/historical/all?lastdays=all')\r\n      .then(res => {\r\n        let cases = Object.values(res.data.cases);\r\n\r\n        let calc = cases.map((data, i) => {\r\n          if (i === 0) {\r\n            return data;\r\n          } else {\r\n            return data - cases[i - 1];\r\n          }\r\n        });\r\n\r\n        let days = Object.keys(res.data.cases);\r\n\r\n        days.shift();\r\n        setDates(days);\r\n\r\n        calc.shift();\r\n        setDailyCases(calc);\r\n      });\r\n  }, []);\r\n\r\n  const data = {\r\n    labels: dates,\r\n    datasets: [\r\n      {\r\n        label: 'Daily Cases',\r\n        backgroundColor: 'rgba(2,62,88,0.2)',\r\n        borderColor: 'rgba(2,62,88,1)',\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: 'rgba(2,62,88,0.4)',\r\n        hoverBorderColor: 'rgba(2,62,88,1)',\r\n        data: dailyCases,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Bar\r\n        data={data}\r\n        height={100}\r\n        width={200}\r\n        maintainAspectRatio={true}\r\n        responsive={false}\r\n        options={{\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                type: 'time',\r\n                time: {\r\n                  displayFormats: {\r\n                    month: 'MMM YYYY',\r\n                  },\r\n                },\r\n                distribution: 'series',\r\n              },\r\n            ],\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { numberWithCommas } from '../helpers/helper';\r\nimport BarChart from './BarChart';\r\n\r\nconst GlobalWrapper = styled.div`\r\n  padding: 0.5em;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  width: 100%;\r\n  background-color: #023e58;\r\n  padding: 1em;\r\n  text-align: center;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n  color: ${props => props.color || '#e60000'};\r\n  font-weight: 500;\r\n`;\r\n\r\nconst GlobalTotal = styled.span`\r\n  color: ${props => props.color || '#e60000'};\r\n  font-weight: ${props => props.weigth || '700'};\r\n  font-size: ${props => props.size || '2rem'};\r\n  line-height: ${props => props.line || '3rem'};\r\n`;\r\n\r\nconst CaseWrapper = styled.div`\r\n  width: 100%;\r\n  background-color: #023e58;\r\n  border-radius: 10px;\r\n  padding: 1em;\r\n  margin: 0.5em 0;\r\n  overflow-y: scroll;\r\n  &::-webkit-scrollbar {\r\n    width: 10px;\r\n    background-color: #f5f5f5;\r\n  }\r\n  &::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    background-color: #f5f5f5;\r\n  }\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n    background-color: #f5f5f5;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: ${props => props.scroll || '#ce2727'};\r\n  }\r\n`;\r\nconst CaseContainer = styled.div`\r\n  display: flex;\r\n  height: 40%;\r\n`;\r\n\r\nconst Case = styled.div`\r\n  border-bottom: 1px solid #5c5c5c;\r\n  padding: 0.3em;\r\n`;\r\n\r\nconst Country = styled.div`\r\n  color: #f1faee;\r\n`;\r\n\r\nconst GlobalResult = ({ total, data }) => {\r\n  return (\r\n    <GlobalWrapper>\r\n      <HeaderWrapper>\r\n        <Header style={{ marginRight: '0.5em' }}>\r\n          <Title color='#f28482'>Global Deaths</Title>\r\n          <GlobalTotal color='#f28482'>\r\n            {numberWithCommas(total.deaths)}\r\n          </GlobalTotal>\r\n        </Header>\r\n        <Header>\r\n          <Title color='#0ead69'>Global Recovered</Title>\r\n          <GlobalTotal color='#0ead69'>\r\n            {numberWithCommas(total.recovered)}\r\n          </GlobalTotal>\r\n        </Header>\r\n      </HeaderWrapper>\r\n\r\n      <CaseContainer>\r\n        <CaseWrapper scroll='#f28482' style={{ marginRight: '0.5em' }}>\r\n          <React.Fragment>\r\n            {data.map((country, i) => (\r\n              <Case key={`${country.country}+${i}`}>\r\n                <GlobalTotal\r\n                  color='#f28482'\r\n                  size='1rem'\r\n                  weigth='700'\r\n                  line='1rem'\r\n                >\r\n                  {numberWithCommas(country.deaths)}{' '}\r\n                  <span style={{ fontWeight: '500', fontSize: '0.90rem' }}>\r\n                    deaths\r\n                  </span>\r\n                </GlobalTotal>\r\n                <Country>{country.country}</Country>\r\n              </Case>\r\n            ))}\r\n          </React.Fragment>\r\n        </CaseWrapper>\r\n\r\n        <CaseWrapper scroll='#0ead69'>\r\n          <React.Fragment>\r\n            {data.map((country, i) => (\r\n              <Case key={`${country.country}+${i}`}>\r\n                <GlobalTotal\r\n                  color='#0ead69'\r\n                  size='1rem'\r\n                  weigth='700'\r\n                  line='1rem'\r\n                >\r\n                  {numberWithCommas(country.recovered)}{' '}\r\n                  <span style={{ fontWeight: '500', fontSize: '0.90rem' }}>\r\n                    recovered\r\n                  </span>\r\n                </GlobalTotal>\r\n                <Country>{country.country}</Country>\r\n              </Case>\r\n            ))}\r\n          </React.Fragment>\r\n        </CaseWrapper>\r\n      </CaseContainer>\r\n\r\n      <div>\r\n        <BarChart />\r\n      </div>\r\n      <div>\r\n        <Header>\r\n          <Title color='#588b8b'>Last Updated</Title>\r\n          <GlobalTotal size='1rem' line='1.5rem' weigth='500' color='#588b8b'>\r\n            {new Date(total.updated).toLocaleString()}\r\n          </GlobalTotal>\r\n        </Header>\r\n      </div>\r\n    </GlobalWrapper>\r\n  );\r\n};\r\n\r\nexport default GlobalResult;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  height: 7em;\r\n  width: 15em;\r\n  top: 0.5em;\r\n  left: 0;\r\n  background-color: #0e1626;\r\n  border-radius: 10px;\r\n  padding: 1em;\r\n`;\r\n\r\nconst Name = styled.span`\r\n  font-size: 1rem;\r\n  color: #f1faee;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst CaseTitle = styled.span`\r\n  font-weight: 700;\r\n  color: #989898;\r\n`;\r\n\r\nconst Total = styled.span`\r\n  color: ${props => props.color};\r\n  font-weight: 700;\r\n`;\r\n\r\nconst CountryCard = ({ country }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Name>{country.country}</Name>\r\n      <div style={{ marginTop: '1em' }}>\r\n        <CaseTitle>Cases: </CaseTitle>\r\n        <Total color='#f1faee'>{country.cases}</Total>\r\n      </div>\r\n      <div>\r\n        <CaseTitle>Deaths: </CaseTitle>\r\n        <Total color='#e63946'>{country.deaths}</Total>\r\n      </div>\r\n      <div>\r\n        <CaseTitle>Recovered: </CaseTitle>\r\n        <Total color='#0ead69'>\r\n          {country.recovered === 0 ? (\r\n            <span>Not shared</span>\r\n          ) : (\r\n            country.recovered\r\n          )}\r\n        </Total>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default CountryCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport redCircle from '../assets/red-circle.png';\r\nimport { styles, markerSize } from '../helpers/helper';\r\nimport CountryCard from './CountryCard';\r\nimport { compose, withProps } from 'recompose';\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n} from 'react-google-maps';\r\n\r\nconst MyMapComponent = compose(\r\n  withProps({\r\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&v=3.exp&libraries=geometry,drawing,places&language=en`,\r\n    loadingElement: <div style={{ height: `100%` }} />,\r\n    containerElement: (\r\n      <div\r\n        style={{\r\n          height: `100%`,\r\n          width: '100%',\r\n          position: 'relative',\r\n          paddingTop: '0.5em',\r\n        }}\r\n      />\r\n    ),\r\n    mapElement: <div style={{ height: `100%`, width: '100%' }} />,\r\n  }),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)(props => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [country, setCountry] = useState([]);\r\n  const [coordinates, setCoordinates] = useState({ lat: 46, lng: 2 });\r\n  const [zoom, setZoom] = useState(3);\r\n  const total = props.total;\r\n\r\n  useEffect(() => {\r\n    \r\n    if (props.click) {\r\n      setCoordinates({\r\n        lat: props.click.countryInfo.lat,\r\n        lng: props.click.countryInfo.long,\r\n      });\r\n      setModalOpen(true);\r\n      setCountry(props.click);\r\n    }\r\n  }, [props.click]);\r\n\r\n  const showModal = country => {\r\n    setModalOpen(true);\r\n    setCountry(country);\r\n  };\r\n\r\n  const changeCenter = coord => {\r\n    setCoordinates({\r\n      lat: coord.lat,\r\n      lng: coord.long,\r\n    });\r\n    setZoom(5);\r\n  };\r\n\r\n  return (\r\n    <GoogleMap\r\n      defaultZoom={3}\r\n      defaultCenter={{ lat: 46, lng: 2 }}\r\n      center={coordinates}\r\n      zoom={zoom}\r\n      options={{\r\n        zoomControl: false,\r\n        disableDefaultUI: true,\r\n        styles: styles,\r\n        draggableCursor: 'cursor',\r\n        draggingCursor: 'cursor',\r\n      }}\r\n    >\r\n      {props.datas.map((data, i) => (\r\n        <Marker\r\n          onClick={() => {\r\n            showModal(data);\r\n            changeCenter(data.countryInfo);\r\n          }}\r\n          key={`${data.countryInfo._id} + ${i}`}\r\n          position={{ lat: data.countryInfo.lat, lng: data.countryInfo.long }}\r\n          icon={{\r\n            url: redCircle,\r\n            scaledSize: markerSize(total.cases, data.cases),\r\n          }}\r\n          opacity={0.8}\r\n        />\r\n      ))}\r\n\r\n      {modalOpen && (\r\n        <CountryCard country={country} closeModal={() => setModalOpen(false)} />\r\n      )}\r\n    </GoogleMap>\r\n  );\r\n});\r\n\r\nconst CoronaMap = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.data && props.total ? (\r\n        <MyMapComponent\r\n          datas={props.data}\r\n          total={props.total}\r\n          click={props.click}\r\n        />\r\n      ) : (\r\n        <p>Loading</p>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CoronaMap;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport GlobalCase from './components/GlobalCase';\nimport GlobalResult from './components/GlobalResult';\nimport CoronaMap from './components/Map';\n\nconst Container = styled.div`\n  height: 100vh;\n  background-color: #fafafa;\n  display: grid;\n  grid-template-columns: [global-case] 20% [corona-map] minmax(30%, 50%) [global-result] 30% [end];\n  grid-template-rows: 100%;\n`;\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState([]);\n  const [click, setClick] = useState(null);\n\n  useEffect(() => {\n    axios\n      .get(\n        'https://disease.sh/v3/covid-19/countries?yesterday=false&sort=cases'\n      )\n      .then(res => setData(res.data));\n    axios\n      .get('https://disease.sh/v3/covid-19/all?yesterday=false')\n      .then(res => setTotal(res.data));\n  }, []);\n\n  const handleChange = country => {\n    setClick(country);\n  };\n\n  return (\n    <Container>\n      <GlobalCase\n        changeCenter={handleChange}\n        countries={data}\n        global={total.cases}\n        lastUpdated={total.updated}\n      />\n      <CoronaMap total={total} data={data} click={click} />\n      <GlobalResult total={total} data={data} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />\n ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}